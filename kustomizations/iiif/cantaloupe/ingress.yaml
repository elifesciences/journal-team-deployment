apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cantaloupe
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt"
    nginx.ingress.kubernetes.io/use-regex: "true"

    # Rewrite target for the IIIF Image API.
    # Combines 'service_prefix' and 'id_part' with a colon, then appends other IIIF segments.
    nginx.ingress.kubernetes.io/rewrite-target: /iiif/2/$service_prefix:$id_part/$region/$size/$rotation/$quality.$format

    # 1. Rewrites the URI to fix issues with encoded paths (e.g., %2F).
    # 2. Checks if the 'format' named capture group is 'webp' and, if so, redefines it to 'jpg'.
    # This snippet executes BEFORE the rewrite-target is processed.
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($format = "webp") {
        set $format "jpg";
      }
      rewrite ^ $request_uri?;
spec:
  rules:
  - host: ${hostname}
    http:
      paths:
        # Regex to match and capture parts of the IIIF Image API request:
        # - Optional IIIF version prefix (e.g., /iiif/2/)
        # - 'service_prefix': Segment before the FIRST colon or slash (non-greedy)
        # - Separator (colon or slash, non-capturing)
        # - 'id_part': Everything after the first separator, up to the IIIF region segment
        # - Standard IIIF segments: region, size, rotation, quality, format
        - path: "/(?:iiif/\\d+/)?(?<service_prefix>[^:/]+)(?:[:/])(?<id_part>.*)/(?<region>[^/]+)/(?<size>[^/]+)/(?<rotation>[^/]+)/(?<quality>[^/]+)\\.(?<format>[a-zA-Z0-9]+)"
          pathType: ImplementationSpecific
          backend:
            service:
              name: cantaloupe
              port:
                number: 8182
  tls:
  - hosts:
    - ${hostname}
    secretName: ${hostname}-tls
